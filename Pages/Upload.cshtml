@page
@model UploadModel
@{
    ViewData["Title"] = "Upload";
}

<h2 class="mb-3">Upload Media</h2>

<form id="uploadForm" enctype="multipart/form-data">
    <div class="mb-3">
        <input type="file" id="fileInput" name="files" multiple class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Upload</button>
</form>

<!-- Progress Bar -->
<div id="uploadProgressContainer" class="progress mt-3" style="height: 25px; display: none;">
    <div id="uploadProgressBar"
         class="progress-bar progress-bar-striped progress-bar-animated"
         role="progressbar"
         style="width: 0%;">
        0%
    </div>
</div>

<!-- Upload Status Message -->
<div id="uploadStatus" class="mt-3"></div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const uploadForm = document.getElementById('uploadForm');
            const fileInput = document.getElementById('fileInput');
            const progressContainer = document.getElementById('uploadProgressContainer');
            const progressBar = document.getElementById('uploadProgressBar');
            const statusDiv = document.getElementById('uploadStatus');

            if (!uploadForm || !fileInput || !progressContainer || !progressBar || !statusDiv) return;

            uploadForm.addEventListener('submit', (e) => {
                e.preventDefault();

                const files = fileInput.files;
                if (!files.length) {
                    alert("Please select at least one file.");
                    return;
                }

                // Reset UI
                progressContainer.style.display = 'block';
                progressBar.classList.remove('bg-danger', 'bg-success');
                progressBar.style.width = '0%';
                progressBar.textContent = '0%';
                statusDiv.innerHTML = '';

                // Prepare FormData
                const formData = new FormData();
                for (let file of files) {
                    formData.append('files', file);
                }

                // Upload via XHR
                const xhr = new XMLHttpRequest();
                xhr.open('POST', window.location.href, true);

                xhr.upload.onprogress = (e) => {
                    if (e.lengthComputable) {
                        const percent = Math.round((e.loaded / e.total) * 100);
                        progressBar.style.width = percent + '%';
                        progressBar.textContent = percent + '%';
                    }
                };

                xhr.onload = () => {
                    if (xhr.status === 200) {
                        progressBar.classList.add('bg-success');
                        statusDiv.innerHTML = `<div class="alert alert-success mt-2">Upload successful!</div>`;
                    } else {
                        progressBar.classList.add('bg-danger');
                        statusDiv.innerHTML = `<div class="alert alert-danger mt-2">Upload failed with status ${xhr.status}.</div>`;
                    }
                };

                xhr.onerror = () => {
                    progressBar.classList.add('bg-danger');
                    statusDiv.innerHTML = `<div class="alert alert-danger mt-2">Upload error occurred.</div>`;
                };

                xhr.send(formData);
            });
        });
    </script>
}
